//////data flow//////////

module hs (a,b,diff,borrow);
input a;
input b;
output diff;
output borrow;

assign diff = a^b;
assign borrow = ~a&b;

endmodule

///////////behavioural /////////////////
module hs (
           input a,
           input b,
           output reg diff,
           output reg borrow
           );

always @ (a or b)
begin 
diff = a^b;
borrow = ~a&b;
end
endmodule

//////////////structural//////////////

module hs (input a,
           input b,
           output diff,
           output borrow);

wire x;
xor (diff,a,b);
not (x,a);
and (borrow,x,b);
endmodule

/////////testbench////////////

module hstb;
reg a,b;
wire diff,borrow;

hs dut(a,b,diff,borrow);

initial begin

$monitor("At time %0t: a=%b,b=%b,diff=%b,borrow=%b",$time,a,b,diff,borrow);

{a,b} = 2'b00;
#10{a,b} = 2'b01;
#10{a,b} = 2'b10;
#10{a,b} = 2'b11;
end
endmodule

//////////run file////////////
vlib work
vlog hs.v hs_tb.v +acc
vsim work.hstb -l run
add wave -r *
run -all
